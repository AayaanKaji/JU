package Q18_SSE_Servlet;

import javax.servlet.*;
import javax.servlet.http.*;
import java.io.*;
import java.net.*;
import java.util.HashMap;
import java.util.Map;

public class SSE_Servlet_API extends HttpServlet {
    // Alpha Vantage API URL and API Key
    private static final String ALPHA_VANTAGE_API_URL = "https://www.alphavantage.co/query";
    private static final String API_KEY = "demo";
    private static final Map<String, String> stockSymbolMap = new HashMap<>();

    static {
        // Initialize the map with stock symbols for each company
        stockSymbolMap.put("apple", "AAPL");
        stockSymbolMap.put("google", "GOOG");
        stockSymbolMap.put("ibm", "IBM");
        stockSymbolMap.put("microsoft", "MSFT");
    }

    // Method to get the stock symbol from the company name
    private static String getSymbolFromName(String name) {
        return stockSymbolMap.get(name.toLowerCase());
    }

    // Method to fetch stock data from Alpha Vantage API
    private String fetchStockData(String symbol) throws IOException {
        String urlString = String.format("%s?function=TIME_SERIES_INTRADAY&symbol=%s&interval=1min&apikey=%s",
                ALPHA_VANTAGE_API_URL, symbol, API_KEY);

        URL url = new URL(urlString);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.setConnectTimeout(5000);
        connection.setReadTimeout(5000);

        // Read the response from Alpha Vantage API
        BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        String inputLine;
        StringBuilder responseContent = new StringBuilder();
        while ((inputLine = in.readLine()) != null) {
            responseContent.append(inputLine);
        }
        in.close();

        // Parse the JSON response and return it as a string
        return responseContent.toString();
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Set the appropriate content type for SSE
        response.setContentType("text/event-stream");
        response.setCharacterEncoding("UTF-8");

        // Get stock company from the URL parameter
        String company = request.getParameter("company");
        if (company == null || company.isEmpty() || stockSymbolMap.containsValue(company)) {
            response.getWriter().write("data: Invalid stock company.\n\n");
            return;
        }

        // Ensure company is in uppercase
        company = company.toUpperCase();

        // Send events continuously (for example, every 5 seconds)
        while (true) {
            try {
                String stockData = fetchStockData(company);
                if (stockData != null) {
                    response.getWriter().write("data: " + stockData + "\n\n");
                    response.getWriter().flush();
                } else {
                    response.getWriter().write("data: Error fetching stock data\n\n");
                }
            } catch (Exception e) {
                response.getWriter().write("data: Error fetching stock data\n\n");
                e.printStackTrace();
            }

            // Wait for 5 seconds before sending the next update
            try {
                Thread.sleep(5000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            // Check if client has disconnected
            if (response.isCommitted()) {
                break;
            }
        }
    }
}
